(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{225:function(e,a,t){"use strict";t.d(a,"a",(function(){return p})),t.d(a,"b",(function(){return u}));var n=t(0),r=t.n(n);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function b(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),s=function(e){var a=r.a.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},p=function(e){var a=s(e.components);return r.a.createElement(c.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},d=r.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),p=s(t),d=n,u=p["".concat(l,".").concat(d)]||p[d]||m[d]||i;return t?r.a.createElement(u,o(o({ref:a},c),{},{components:t})):r.a.createElement(u,o({ref:a},c))}));function u(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var b in a)hasOwnProperty.call(a,b)&&(o[b]=a[b]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},90:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return l})),t.d(a,"metadata",(function(){return o})),t.d(a,"toc",(function(){return b})),t.d(a,"default",(function(){return s}));var n=t(3),r=t(7),i=(t(0),t(225)),l={},o={unversionedId:"Week 04/session-09/variables-and-constants",id:"Week 04/session-09/variables-and-constants",isDocsHomePage:!1,title:"variables-and-constants",description:"Variables and Constants",source:"@site/../coursebook/Week 04/session-09/variables-and-constants.md",slug:"/Week 04/session-09/variables-and-constants",permalink:"/Fundamentals-course/Week 04/session-09/variables-and-constants",editUrl:"https://github.com/gazaskygeeks/Fundamentals-course/edit/master/website/../coursebook/Week 04/session-09/variables-and-constants.md",version:"current",sidebar:"someSidebar",previous:{title:"resources",permalink:"/Fundamentals-course/Week 04/session-09/resources"},next:{title:"README",permalink:"/Fundamentals-course/Week 04/session-10/README"}},b=[{value:'<a id="variables">Variables and Constants</a>',id:"variables-and-constants",children:[]},{value:"But what about <code>const</code>?",id:"but-what-about-const",children:[]},{value:"When to use <code>var</code>, <code>let</code>, and <code>const</code>?",id:"when-to-use-var-let-and-const",children:[{value:"Rules for Naming Variables",id:"rules-for-naming-variables",children:[]}]},{value:"Final words about <code>let</code> and <code>const</code>",id:"final-words-about-let-and-const",children:[]},{value:"Practice Time \ud83d\udc68\u200d\ud83d\udcbb",id:"practice-time-",children:[]}],c={toc:b};function s(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},c,t,{components:a,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"variables-and-constants"},Object(i.b)("a",{id:"variables"},"Variables and Constants")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"What do we mean by the word variable?")),Object(i.b)("p",null,"Variable is a place where we can store our data, and we can do that using some special keywords like ",Object(i.b)("inlineCode",{parentName:"p"},"var"),", ",Object(i.b)("inlineCode",{parentName:"p"},"let"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"const"),' for constant "variable".'),Object(i.b)("p",null,"Let's assume that we have a person called ",Object(i.b)("inlineCode",{parentName:"p"},"Ali")," and his age is ",Object(i.b)("inlineCode",{parentName:"p"},"30")," and we want to store his age in our program. As we said, we have the variable which acts as a place to store our data so let's see how we will do that with the different ways of defining variables in JavaScript:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"var"),":"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var age = 30;\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"let"),":"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"let age = 30;\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"const"),":"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const age = 30;\n")),Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"So our steps of storing a value in a variable are:")))),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"First, we write down one of the three ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"keywords"))," ",Object(i.b)("inlineCode",{parentName:"p"},"var"),", ",Object(i.b)("inlineCode",{parentName:"p"},"let"),", or ",Object(i.b)("inlineCode",{parentName:"p"},"const"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Then, we define the ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"name"))," of the variable which is ",Object(i.b)("inlineCode",{parentName:"p"},"age")," in our case."),Object(i.b)("blockquote",{parentName:"li"},Object(i.b)("p",{parentName:"blockquote"},"\ud83d\udca1 You can name your variable whatever name you want but we need to follow a few rules mentioned below"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Then to assign a value to a variable we use the single assignment operator ",Object(i.b)("inlineCode",{parentName:"p"},"=")," .")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"The final step is to assign the ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"value"))," which in this case the number ",Object(i.b)("inlineCode",{parentName:"p"},"30")," to the variable ",Object(i.b)("inlineCode",{parentName:"p"},"age"),"."))),Object(i.b)("br",null),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"We can also store the value in two steps:")),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Define the variable name (declaring step).",Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var age;\n"))),Object(i.b)("li",{parentName:"ol"},"Assign/Update the value ",Object(i.b)("inlineCode",{parentName:"li"},"30")," to the variable ",Object(i.b)("inlineCode",{parentName:"li"},"age")," (assigning step).",Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"age = 30;\n")),Object(i.b)("blockquote",{parentName:"li"},Object(i.b)("p",{parentName:"blockquote"},"\ud83d\udca1 Because we defined the variable ",Object(i.b)("inlineCode",{parentName:"p"},"age")," on step 1 so no need to use the keyword ",Object(i.b)("inlineCode",{parentName:"p"},"var")," again with step 2")))),Object(i.b)("br",null),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"The general syntax for creating a variable:")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"var variableName = value;")),Object(i.b)("br",null),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"\ud83d\udca1 For now, the same thing we apply for defining the variable with ",Object(i.b)("inlineCode",{parentName:"p"},"var")," is also applied to ",Object(i.b)("inlineCode",{parentName:"p"},"let"),", and we will see the difference between ",Object(i.b)("inlineCode",{parentName:"p"},"var")," and ",Object(i.b)("inlineCode",{parentName:"p"},"let")," in later sessions.")),Object(i.b)("br",null),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Now, let's see some examples")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var x = 10; // declare variable x and assign the value 10 to x\nx = 11; // re-assign the value of x to be 11\n\nconsole.log(x); // print the value of x which is 11\n\nlet y = 20;\n\ny = 10;\n\nconsole.log(y); // print 10\n")),Object(i.b)("h2",{id:"but-what-about-const"},"But what about ",Object(i.b)("inlineCode",{parentName:"h2"},"const"),"?"),Object(i.b)("p",null,"We use const to define a constant variable, once we assign a value to the variable then we can't change it later and hence the name ",Object(i.b)("inlineCode",{parentName:"p"},"const")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const x = 10;\n\nx = 20; // Error: Assignment to constant variable\n\nconst y; // Error : Missing initializer in const declaration\n")),Object(i.b)("p",null,"As we said, it is constant and we can't give it(re-assign) a different value to it, and also we can't declare a variable with ",Object(i.b)("inlineCode",{parentName:"p"},"const")," and not giving it a value because if we did that we wouldn't be able to give it a value later since it's constant and therefor the variable would be useless. And so this is the difference between ",Object(i.b)("inlineCode",{parentName:"p"},"const")," and the other two ",Object(i.b)("inlineCode",{parentName:"p"},"(var and let)")),Object(i.b)("h2",{id:"when-to-use-var-let-and-const"},"When to use ",Object(i.b)("inlineCode",{parentName:"h2"},"var"),", ",Object(i.b)("inlineCode",{parentName:"h2"},"let"),", and ",Object(i.b)("inlineCode",{parentName:"h2"},"const"),"?"),Object(i.b)("p",null,'Nowadays it is "recommended" to use let and const instead of var(we will see why later). Use ',Object(i.b)("inlineCode",{parentName:"p"},"let")," whenever you are planning on changing the value of the variable, and ",Object(i.b)("inlineCode",{parentName:"p"},"const")," when you are planning on keeping the value as it is."),Object(i.b)("br",null),Object(i.b)("h3",{id:"rules-for-naming-variables"},"Rules for Naming Variables"),Object(i.b)("p",null,"JavaScript has only a few rules for variable names:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Variable names are case sensitive:"),Object(i.b)("blockquote",{parentName:"li"},Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("inlineCode",{parentName:"p"},"myName")," and ",Object(i.b)("inlineCode",{parentName:"p"},"myname")," are two different variables"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Variable name ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"must"))," start with a letter, an underscore(","_","), or a dollar sign($) and you can't use numbers as the first character.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Variable name must not contain symbols, spaces or any other punctuation marks.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"You can't use one of JavaScript's ",Object(i.b)("strong",{parentName:"p"},"reserved words")," as a variable name."))),Object(i.b)("p",null,"Examples"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"let b = 10;\nlet B = 10;\n\n//valid variables name\nlet name;\nlet apple3;\nlet interestRate;\nlet _age;\nlet $myage;\n\n//Invalid\nlet 3amel; // started with a number\nlet interest-rate; // dash (-)\nlet my name;\nlet my'name;\n\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Also, one of the best practices in naming variables in javascript is to follow the ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Naming_convention_(programming)"}),"camelCase")," convention")),Object(i.b)("p",null,"Examples"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"let myPlayer;\nlet favFootballTeam;\n")),Object(i.b)("h2",{id:"final-words-about-let-and-const"},"Final words about ",Object(i.b)("inlineCode",{parentName:"h2"},"let")," and ",Object(i.b)("inlineCode",{parentName:"h2"},"const")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"let")," and ",Object(i.b)("inlineCode",{parentName:"p"},"const")," were introduced with the release of ECMAScript 2015, commonly known as ES6. So you are highly likely to see old applications that don't contain ",Object(i.b)("inlineCode",{parentName:"p"},"let")," and ",Object(i.b)("inlineCode",{parentName:"p"},"const"),"."),Object(i.b)("h2",{id:"practice-time-"},"Practice Time \ud83d\udc68\u200d\ud83d\udcbb"),Object(i.b)("p",null,"Follow the following ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://repl.it/@CodeAcademy1/Declaring-Variables#instructions"}),"instructions"),", then write your code inside the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://repl.it/@CodeAcademy1/Declaring-Variables#index.js"}),"index")," file."))}s.isMDXComponent=!0}}]);