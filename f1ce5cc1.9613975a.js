(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{207:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return s}));var a=n(3),l=n(7),r=(n(0),n(225)),i={},c={unversionedId:"Week 06/session-15/DOM-manipulations",id:"Week 06/session-15/DOM-manipulations",isDocsHomePage:!1,title:"DOM-manipulations",description:"DOM Manipulations",source:"@site/../coursebook/Week 06/session-15/DOM-manipulations.md",slug:"/Week 06/session-15/DOM-manipulations",permalink:"/Fundamentals-course/Week 06/session-15/DOM-manipulations",editUrl:"https://github.com/gazaskygeeks/Fundamentals-course/edit/master/website/../coursebook/Week 06/session-15/DOM-manipulations.md",version:"current",sidebar:"someSidebar",previous:{title:"README",permalink:"/Fundamentals-course/Week 06/README"},next:{title:"Dom-Exercises",permalink:"/Fundamentals-course/Week 06/session-15/Dom-Exercises"}},b=[{value:"JavaScript Methods For DOM Manipulation",id:"javascript-methods-for-dom-manipulation",children:[{value:"1- querySelector()",id:"1--queryselector",children:[]},{value:"2- querySelectorAll()",id:"2--queryselectorall",children:[]},{value:"3- addEventListener()",id:"3--addeventlistener",children:[]},{value:"4- createElement()",id:"4--createelement",children:[]},{value:"5- appendChild()",id:"5--appendchild",children:[]},{value:"6- setAttribute()",id:"6--setattribute",children:[]},{value:"7- getAttribute()",id:"7--getattribute",children:[]},{value:"8- removeAttribute()",id:"8--removeattribute",children:[]},{value:"Adding CSS styles",id:"adding-css-styles",children:[]},{value:"Element properties",id:"element-properties",children:[]}]}],o={toc:b};function s(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"dom-manipulations"},"DOM Manipulations"),Object(r.b)("p",null,"As a web developer, you frequently need to manipulate the DOM, the object model that is used by browsers to specify the logical structure of web pages, and based on this structure to render HTML elements on the screen."),Object(r.b)("p",null,"HTML defines the default DOM structure. However in many cases you may want to manipulate this with JavaScript, usually in order to add extra functionalities to a site."),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"https://user-images.githubusercontent.com/29041512/79688580-d2e1cb00-8257-11ea-9f7f-4596d76d3dce.jpg",alt:"dom-tree"}))),Object(r.b)("h2",{id:"javascript-methods-for-dom-manipulation"},"JavaScript Methods For DOM Manipulation"),Object(r.b)("p",null,"There are many ",Object(r.b)("strong",{parentName:"p"},"JavaScript methods")," that ",Object(r.b)("strong",{parentName:"p"},"aid DOM manipulation"),". You\u2019d likely use these methods frequently in your code"),Object(r.b)("h3",{id:"1--queryselector"},"1- ",Object(r.b)("a",Object(a.a)({parentName:"h3"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector"}),"querySelector()")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"querySelector()")," method ",Object(r.b)("strong",{parentName:"p"},"returns the first element that matches one or more CSS selectors"),". If no match is found, it returns ",Object(r.b)("inlineCode",{parentName:"p"},"null"),"."),Object(r.b)("p",null,"Before ",Object(r.b)("inlineCode",{parentName:"p"},"querySelector()")," was introduced, developers widely used the ",Object(r.b)("inlineCode",{parentName:"p"},"getElementById()")," method which ",Object(r.b)("strong",{parentName:"p"},"fetches an element with a specified ",Object(r.b)("inlineCode",{parentName:"strong"},"id")," value"),"."),Object(r.b)("p",null,"Although ",Object(r.b)("inlineCode",{parentName:"p"},"getElementById()")," is still a useful method, but with the newer querySelector() and querySelectorAll() methods we are free to ",Object(r.b)("strong",{parentName:"p"},"target elements based on any CSS selector"),", thus we have more flexibility."),Object(r.b)("h4",{id:"syntax"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const element = document.querySelector(selector);\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"element")," \u2013 First matching element or ",Object(r.b)("inlineCode",{parentName:"li"},"null")," (if no element matches the selectors)."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"selector")," \u2013 one or more CSS selectors, such as ",Object(r.b)("inlineCode",{parentName:"li"},'"#fooId"'),", ",Object(r.b)("inlineCode",{parentName:"li"},'".fooClassName"'),", ",Object(r.b)("inlineCode",{parentName:"li"},'".class1.class2"'),", or ",Object(r.b)("inlineCode",{parentName:"li"},'".class1, .class2"'),".")),Object(r.b)("h4",{id:"code-example"},"Code Example"),Object(r.b)("p",null,"In this example, the first ",Object(r.b)("inlineCode",{parentName:"p"},"<div>")," gets selected with the ",Object(r.b)("inlineCode",{parentName:"p"},"querySelector()")," method and its color is changed to red."),Object(r.b)("h5",{id:"html"},"HTML"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<p>paragraph one</p>\n<p>paragraph two</p>\n<div>div one</div>\n<p>paragraph three</p>\n<div class="first">div two</div>\n<div id="second">div three</div>\n')),Object(r.b)("h5",{id:"javascript"},"Javascript"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// select an element based on tag name (div here)\nconst firstDiv = document.querySelector("div");\nfirstDiv.textContent; // div one\nfirstDiv.style.color = "red"; // this will change its color to red\n\n//select a div using the class name\nconst secondDiv = document.querySelector(".first");\nsecondDiv.textContent; // div two\n\n//select a div using the id\nconst thirdDiv = document.querySelector("#second");\nthirdDiv.textContent; // div three\n')),Object(r.b)("h3",{id:"2--queryselectorall"},"2- ",Object(r.b)("a",Object(a.a)({parentName:"h3"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll"}),"querySelectorAll()")),Object(r.b)("p",null,"Unlike ",Object(r.b)("inlineCode",{parentName:"p"},"querySelector()")," that returns only the first instance of all matching elements, ",Object(r.b)("inlineCode",{parentName:"p"},"querySelectorAll()")," ",Object(r.b)("strong",{parentName:"p"},"returns all elements that match the specified CSS selector"),"."),Object(r.b)("p",null,"The matching elements are returned as a ",Object(r.b)("inlineCode",{parentName:"p"},"NodeList")," object that will be an empty object if no matching elements are found."),Object(r.b)("h4",{id:"syntax-1"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const elements = document.querySelectorAll(selector);\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"elements")," \u2013 A ",Object(r.b)("inlineCode",{parentName:"li"},"NodeList")," object with all matching elements as property values."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"selector")," \u2013 one or more CSS selectors, such as ",Object(r.b)("inlineCode",{parentName:"li"},'"#fooId"'),", ",Object(r.b)("inlineCode",{parentName:"li"},'".fooClassName"'),", ",Object(r.b)("inlineCode",{parentName:"li"},'".class1.class2"'),", or ",Object(r.b)("inlineCode",{parentName:"li"},'".class1, .class2"'),".")),Object(r.b)("h4",{id:"code-example-1"},"Code Example"),Object(r.b)("p",null,"The example below uses the same HTML as the previous one. However, in this example, all paragraphs are selected with ",Object(r.b)("inlineCode",{parentName:"p"},"querySelectorAll()"),", and are colored blue."),Object(r.b)("h5",{id:"html-1"},"HTML"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<p>paragraph one</p>\n<p>paragraph two</p>\n<div>div one</div>\n<p>paragraph three</p>\n<div class="first">div two</div>\n<div id="second">div three</div>\n')),Object(r.b)("h5",{id:"javascript-1"},"Javascript"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// select all elements have (p) tag\nconst paragraphs = document.querySelectorAll("p");\nfor (const p of paragraphs) // to make loop on paragraphs\n  p.style.color = "blue";\n')),Object(r.b)("h3",{id:"3--addeventlistener"},"3- ",Object(r.b)("a",Object(a.a)({parentName:"h3"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener"}),"addEventListener()")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Events")," refer to what happens to an HTML element, such as clicking, focusing, or loading, to which we can react with JavaScript. We can assign JS functions to listen for these events in elements and do something when the event had occurred."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"There are three ways you can ",Object(r.b)("strong",{parentName:"li"},"assign a function to a certain event"),".")),Object(r.b)("p",null,"If ",Object(r.b)("inlineCode",{parentName:"p"},"foo()")," is a custom function, you can register it ",Object(r.b)("strong",{parentName:"p"},"as a click event listener")," (call it when the button element is clicked) in three ways:"),Object(r.b)("p",null,"1- ",Object(r.b)("strong",{parentName:"p"},"HTML")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<button onclick="foo()">Alert</button>\n')),Object(r.b)("p",null,"2- ",Object(r.b)("strong",{parentName:"p"},"Javascript")," - first way"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const btn = document.querySelector("button");\nbtn.onclick = foo;\n')),Object(r.b)("p",null,"3- ",Object(r.b)("strong",{parentName:"p"},"Javascript")," - second way"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const btn = document.querySelector("button");\nbtn.addEventListener("click", foo);\n')),Object(r.b)("p",null,"The method ",Object(r.b)("inlineCode",{parentName:"p"},"addEventListener()")," (the third solution) has ",Object(r.b)("strong",{parentName:"p"},"some pros")," ; it is the latest standard \u2013 allowing the assignment of more than one function as event listeners to one event \u2013 and comes with a useful set of options."),Object(r.b)("h4",{id:"syntax-2"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"element.addEventListener(event, listener, [options]);\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"element")," \u2013 The HTML element the event listener will be listening for."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"event")," \u2013 The targeted event."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"listener")," \u2013 Typically, a JavaScript function."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"options")," \u2013 (optional) An object with a set of boolean properties (listed below).")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Options"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"What happens, when it is set to true?"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"capture")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"Stops event bubbling, i.e. prevents calling of any event listeners for the same event type in the element\u2019s ancestors. To use this feature, you can use 2 syntaxes: ",Object(r.b)("br",null),Object(r.b)("inlineCode",{parentName:"td"},"element.addEventListener(event, listener, true);")," ",Object(r.b)("br",null),Object(r.b)("inlineCode",{parentName:"td"},"element.addEventListener(event, listener, {capture:true});"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"once")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"Listener is called only the first time the event happens, then it is automatically detached from the event, and won\u2019t be triggered by it anymore.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"passive")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"The default action of the event cannot be stopped with the ",Object(r.b)("inlineCode",{parentName:"td"},"preventDefault()")," method.")))),Object(r.b)("h4",{id:"code-example-2"},"Code Example"),Object(r.b)("h5",{id:"html-2"},"HTML"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),"<button>Click Me</button>\n")),Object(r.b)("h5",{id:"javascript-2"},"Javascript"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const btn = document.querySelector("button");\nbtn.addEventListener("click", foo);\nfunction foo() {\n  alert("hello");\n}\n')),Object(r.b)("h3",{id:"4--createelement"},"4- ",Object(r.b)("a",Object(a.a)({parentName:"h3"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement"}),"createElement()")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"createElement()")," method ",Object(r.b)("strong",{parentName:"p"},"creates a new HTML element")," using the ",Object(r.b)("strong",{parentName:"p"},"name of the HTML tag")," to be created, such as ",Object(r.b)("inlineCode",{parentName:"p"},"'p'")," or ",Object(r.b)("inlineCode",{parentName:"p"},"'div'"),"."),Object(r.b)("p",null,"You can later add this element to the web page by using different ",Object(r.b)("strong",{parentName:"p"},"methods for DOM insertion"),", such as ",Object(r.b)("inlineCode",{parentName:"p"},"AppendChild()")," ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/gazaskygeeks/Fundamentals-course/blob/week6-session17-review/coursebook/Week%2006/session-17/DOM-manipulations#5--appendchild"}),"see later in this session"),"."),Object(r.b)("h4",{id:"syntax-3"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"document.createElement(tagName);\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"tagName")," \u2013 ",Object(r.b)("strong",{parentName:"li"},"The name of the HTML tag you want to create"),".")),Object(r.b)("h4",{id:"code-example-3"},"Code Example"),Object(r.b)("p",null,"With the following example, you can create a new paragraph element:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const pElement = document.createElement("p");\n')),Object(r.b)("h3",{id:"5--appendchild"},"5- ",Object(r.b)("a",Object(a.a)({parentName:"h3"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild"}),"appendChild()")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"appendChild()")," method ",Object(r.b)("strong",{parentName:"p"},"adds an element as the last child")," to the HTML element that invokes this method."),Object(r.b)("p",null,"The child to be inserted can be either a ",Object(r.b)("strong",{parentName:"p"},"newly created element"),", or an ",Object(r.b)("strong",{parentName:"p"},"already existing one"),". In the latter case, it will be moved from its previous position to the position of the last child."),Object(r.b)("h4",{id:"syntax-4"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"element.appendChild(childElement);\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"element")," \u2013 The HTML element to which ",Object(r.b)("inlineCode",{parentName:"li"},"childElement")," is added as its last child."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"childElement")," \u2013 The HTML element added as the last child of ",Object(r.b)("inlineCode",{parentName:"li"},"element"),".")),Object(r.b)("h4",{id:"code-example-4"},"Code Example"),Object(r.b)("p",null,"In this example, we insert a ",Object(r.b)("inlineCode",{parentName:"p"},"<strong>")," element is as the child of a ",Object(r.b)("inlineCode",{parentName:"p"},"<div>")," element using the ",Object(r.b)("inlineCode",{parentName:"p"},"appendChild()")," and the aforementioned ",Object(r.b)("inlineCode",{parentName:"p"},"createElement()")," methods."),Object(r.b)("h5",{id:"html-3"},"HTML"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),"<div></div>\n")),Object(r.b)("h5",{id:"javascript-3"},"Javascript"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// select the first div\nconst div = document.querySelector("div");\n\n// create new element (<strong> </strong>)\nconst strong = document.createElement("strong");\nstrong.textContent = "Hello";\ndiv.appendChild(strong);\n')),Object(r.b)("h3",{id:"6--setattribute"},"6- ",Object(r.b)("a",Object(a.a)({parentName:"h3"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute"}),"setAttribute()")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"setAttribute()")," method either ",Object(r.b)("strong",{parentName:"p"},"adds a new attribute")," to an HTML element, or ",Object(r.b)("strong",{parentName:"p"},"updates the value")," of an attribute that already exists."),Object(r.b)("h4",{id:"syntax-5"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"element.setAttribute(name, value);\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"element")," \u2013 The HTML element to which an attribute is added, or of which attribute is updated."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"name")," \u2013 The name of the attribute."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"value")," \u2013 The value of the attribute.")),Object(r.b)("h4",{id:"code-example-5"},"Code Example"),Object(r.b)("p",null,"In this example, we add the ",Object(r.b)("inlineCode",{parentName:"p"},"contenteditable")," attribute to a ",Object(r.b)("inlineCode",{parentName:"p"},"<div>")," by making use of the ",Object(r.b)("inlineCode",{parentName:"p"},"setAttribute()")," method, which will turn its content editable."),Object(r.b)("h5",{id:"html-4"},"HTML"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),"<div>hello</div>\n")),Object(r.b)("h4",{id:"javascript-4"},"Javascript"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const div = document.querySelector("div");\n\n// set new attribute for the div element\ndiv.setAttribute("contenteditable", ""); // <div contenteditable></div>\n')),Object(r.b)("h3",{id:"7--getattribute"},"7- ",Object(r.b)("a",Object(a.a)({parentName:"h3"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute"}),"getAttribute()")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"getAttribute()")," method ",Object(r.b)("strong",{parentName:"p"},"returns the value of a specified attribute")," belonging to a certain HTML element."),Object(r.b)("h4",{id:"syntax-6"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"element.getAttribute(name);\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"element")," \u2013 The HTML element of which attribute is requested."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"name")," \u2013 The name of the attribute.")),Object(r.b)("h4",{id:"code-example-6"},"Code Example"),Object(r.b)("p",null,"In this example, we alert the value of the ",Object(r.b)("inlineCode",{parentName:"p"},"contenteditable")," attribute belonging to the ",Object(r.b)("inlineCode",{parentName:"p"},"<div>")," element with the help of the ",Object(r.b)("inlineCode",{parentName:"p"},"getAttribute()")," method."),Object(r.b)("h5",{id:"html-5"},"HTML"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<div contenteditable="true">hello</div>\n')),Object(r.b)("h5",{id:"javascript-5"},"Javascript"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-JavaScript"}),"const div = document.querySelector('div');\nalert(div.getAttribute('contenteditable')); // true\n")),Object(r.b)("h3",{id:"8--removeattribute"},"8- ",Object(r.b)("a",Object(a.a)({parentName:"h3"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute"}),"removeAttribute()")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"removeAttribute()")," method ",Object(r.b)("strong",{parentName:"p"},"removes a given attribute")," of a specific HTML element."),Object(r.b)("h4",{id:"syntax-7"},"Syntax"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"element.removeAttribute(name);\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"element")," \u2013 The HTML element of which attribute is to be removed."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"name")," \u2013 The name of the attribute.")),Object(r.b)("h4",{id:"code-example-7"},"Code Example"),Object(r.b)("p",null,"In this example, we remove the ",Object(r.b)("inlineCode",{parentName:"p"},"contenteditable")," attribute from the ",Object(r.b)("inlineCode",{parentName:"p"},"<div>")," element. As a result, the ",Object(r.b)("inlineCode",{parentName:"p"},"<div>")," won\u2019t be editable any more."),Object(r.b)("h5",{id:"html-6"},"HTML"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<div contenteditable="true">hello</div>\n')),Object(r.b)("h5",{id:"javascript-6"},"JavaScript"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const div = document.querySelector("div");\ndiv.removeAttribute("contenteditable");\n')),Object(r.b)("h3",{id:"adding-css-styles"},"Adding CSS styles"),Object(r.b)("p",null,"CSS rules can be applied like any other property; note though that the properties are camel-cased in JavaScript:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'myElement.style.marginLeft = "2em";\n')),Object(r.b)("p",null,"If we want certain values, we can obtain these via the ",Object(r.b)("inlineCode",{parentName:"p"},".style")," property. However, this will only give us styles that have been explicitly applied. To get the computed values, we can use, ",Object(r.b)("inlineCode",{parentName:"p"},"window.getComputedStyle()"),". It takes the element and returns a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration"}),"CSSStyleDeclaration")," containing all styles from the element itself as well as those inherited from its parents:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'window.getComputedStyle(myElement).getPropertyValue("margin-left");\n')),Object(r.b)("h3",{id:"element-properties"},"Element properties"),Object(r.b)("p",null,"Every element also has the properties ",Object(r.b)("inlineCode",{parentName:"p"},".innerHTML")," and ",Object(r.b)("inlineCode",{parentName:"p"},".textContent")," (as well as ",Object(r.b)("inlineCode",{parentName:"p"},".innerText")," , which is similar to ",Object(r.b)("inlineCode",{parentName:"p"},".textContent"),", but has some ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://perfectionkills.com/the-poor-misunderstood-innerText/"}),"important differences")," ). These hold the HTML and plain text content respectively. They are writable properties, meaning we can modify elements and their contents directly:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// Replace the inner HTML\nmyElement.innerHTML = `\n  <div>\n    <h2>New content</h2>\n    <p>beep boop beep boop</p>\n  </div>\n`;\n\n// Remove all child nodes\nmyElement.innerHTML = null;\n\n// Append to the inner HTML\nmyElement.innerHTML += `\n  <a href="foo.html">continue reading...</a>\n  <hr/>\n`;\n')),Object(r.b)("p",null,"Appending markup to the HTML, as shown above, is usually ",Object(r.b)("strong",{parentName:"p"},"a bad idea though"),", as we\u2019d lose any previously made property changes on the affected elements and bound event listeners. Setting the ",Object(r.b)("inlineCode",{parentName:"p"},".innerHTML")," is good for completely throwing away markup and replacing it with something else, e.g. server-rendered markup. So appending elements would better be done like so:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const link = document.createElement("a");\n\n// creates a new Text node\nconst text = document.createTextNode("continue reading...");\n\nconst hr = document.createElement("hr");\n\nlink.href = "foo.html";\nlink.appendChild(text);\nmyElement.appendChild(link);\nmyElement.appendChild(hr);\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Difference between using ",Object(r.b)("inlineCode",{parentName:"strong"},"createTextNode with appendChild")," vs ",Object(r.b)("inlineCode",{parentName:"strong"},"textContent")),":"),Object(r.b)("p",null,"If you have a ",Object(r.b)("inlineCode",{parentName:"p"},"span")," and you want to change its text , what do you think is better to use ?\n1- ",Object(r.b)("strong",{parentName:"p"},"createTextNode with appendChild")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const my_text = document.createTextNode("Hello!");\nspan.appendChild(my_text);\n')),Object(r.b)("p",null,"2- ",Object(r.b)("strong",{parentName:"p"},"textContent")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'span.textContent = "hello";\n')),Object(r.b)("p",null,"The fundamental difference is that:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"createTextNode()")," is a ",Object(r.b)("strong",{parentName:"li"},Object(r.b)("em",{parentName:"strong"},"method"))," and works just as its name says: it ",Object(r.b)("strong",{parentName:"li"},"creates an element")," then you must do something with it (like in your example, where you append it as a child);\nso it is useful if you want to have a new element and place it somewhere."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"textContent")," is a ",Object(r.b)("strong",{parentName:"li"},Object(r.b)("em",{parentName:"strong"},"property"))," you may get or set, with a unique statement and nothing else;\nso it is useful when you ",Object(r.b)("strong",{parentName:"li"},"only want to change the content")," of an already existing element.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Now")," in this case, you want to ",Object(r.b)("strong",{parentName:"p"},"change the text")," of the element:\nSo if your ",Object(r.b)("inlineCode",{parentName:"p"},"span")," looks like this"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),"<span>Original text</span>\n")),Object(r.b)("p",null,"and you used ",Object(r.b)("inlineCode",{parentName:"p"},"createTextNode")," then it will end with:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),"<span>Original textHello!</span>\n")),Object(r.b)("p",null,"because you ",Object(r.b)("strong",{parentName:"p"},"appended your textNode"),"."),Object(r.b)("p",null,"So you should use ",Object(r.b)("inlineCode",{parentName:"p"},"textContent")," in this case."))}s.isMDXComponent=!0},225:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var a=n(0),l=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=l.a.createContext({}),s=function(e){var t=l.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return l.a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},m=l.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,u=p["".concat(i,".").concat(m)]||p[m]||d[m]||r;return n?l.a.createElement(u,c(c({ref:t},o),{},{components:n})):l.a.createElement(u,c({ref:t},o))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var o=2;o<r;o++)i[o]=n[o];return l.a.createElement.apply(null,i)}return l.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);